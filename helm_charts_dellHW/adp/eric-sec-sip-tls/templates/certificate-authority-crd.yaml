{{- if .Values.manuallyDeployCrd }}

# Install manually, replacing <VERSION> with the current k8s server version of your cluster.
# The version can be fetched by checking the serverVersion.gitVersion field of the 'kubectl version' command. E.g.:
#
#   VERSION=$(kubectl version -o yaml | grep "serverVersion" -A9 | grep "gitVersion" | awk '{print $2}') && echo $VERSION
#
# Then install the CRD by issuing the following command:
#
#   helm template charts/eric-sec-sip-tls/ -x templates/certificate-authority-crd.yaml --set manuallyDeployCrd=true --kube-version="$VERSION" | kubectl apply -f -
#
# 'helm template' renders the template without executing it and outputs the result.
# 'kubectl apply' takes the output as stdin and pushes it to the cluster.
#
# Side note: 'helm template' renders the values locally without contacting tiller. This means that .Capabilities struct is faked and cannot be used directly.
#            Instead kube-version is given manually to indicate a sufficient k8s version.

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  # name must match the spec fields below, and be in the form: <plural>.<group>
  name: certificateauthorities.com.ericsson.sec.tls
  annotations:
    {{- include "eric-sec-sip-tls.product-info" . | nindent 4 }}
spec:
  # group name to use for REST API: /apis/<group>/<version>
  group: com.ericsson.sec.tls
  # list of versions supported by this CustomResourceDefinition
  {{- if (semverCompare ">=1.11" .Capabilities.KubeVersion.GitVersion) }}
  # Each version can be enabled/disabled by Served flag.
  # One and only one version must be marked as the storage version.
  versions:
  - name: v1alpha1
    served: true
    storage: true
  {{- else }}
  version: v1alpha1
  {{- end }}
  scope: Namespaced
  names:
    # plural name to be used in the URL: /apis/<group>/<version>/<plural>
    plural: certificateauthorities
    # singular name to be used as an alias on the CLI and for display
    singular: certificateauthority
    # kind is normally the CamelCased singular type. The resource manifests use this.
    kind: CertificateAuthority
    # shortNames allow shorter string to match your resource on the CLI
    shortNames:
    - certauthority
    - ca
  {{- if (semverCompare ">=1.11" .Capabilities.KubeVersion.GitVersion) }}
  validation:
    # openAPIV3Schema is the schema for validating custom objects.
    openAPIV3Schema:
      properties:
        spec:
          required:
          - generated-secret-name
          - common-name
          properties:
            generated-secret-name:
              type: string
              # Use the same regex as used by Kubernetes API Server
              pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$'
            common-name:
              # No strict pattern validation needed for CN in CA
              type: string
  {{- end }}
{{- end }}
